<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
	"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<!-- namespace：当前XML文件用于配置哪个接口中抽象方法对应的SQL语句 -->
<mapper namespace="com.bi.supmarket.mapper.UserMapper">

	<resultMap id="UserEntityMap" 
		type="com.bi.supmarket.entity.User" >
		<id column="uid" property="uid" />
		<result column="username" property="username" />
		<result column="password" property="password" />
		<result column="salt" property="salt" />
		<result column="is_delete" property="isDelete" />
		<result column="phone" property="phone" />
		<result column="email" property="email" />	
		<result column="gender" property="gender" />	
		<result column="avatar" property="avatar" />	
		<result column="created_user" property="createdUser" />	
		<result column="created_time" property="createdTime" />	
		<result column="modified_user" property="modifiedUser" />	
		<result column="modified_time" property="modifiedTime" />	
	</resultMap>
	
	
<!--	useGeneratedKeys useGeneratedKeys useGeneratedkeys-->
	<!-- 用户注册的方法 -->
	<!-- Integer addnew(User user) -->
	<insert id="addnew"
		useGeneratedKeys="true"
		keyProperty="uid">
		INSERT INTO t_user(
				username, password,
				salt,is_delete,
				phone,email,
				gender,avatar,
				created_user,created_time,
				modified_user,modified_time
			) VALUES(
				#{username}, #{password},
				#{salt},#{isDelete},
				#{phone},#{email},
				#{gender},#{avatar},
				#{createdUser},#{createdTime},
				#{modifiedUser},#{modifiedTime}
			)
	</insert>
	
	<!-- 更新密码 -->
	<!-- Integer updatePassword(
		@Param("uid") Integer uid,
		@Param("password") String password,
		@Param("modifiedUser") String modifiedUser,
		@Param("modifiedTime") Date modifiedTime)  -->
	<update id="updatePassword">
		update 
			t_user
		set 
			password=#{password},
			modified_user=#{modifiedUser}, 
			modified_time=#{modifiedTime} 
		where 
			uid=#{uid}
	</update>
	
	<!-- 上传头像 -->
	<!-- 	Integer updateAvatar(
			@Param("uid") Integer uid,
			@Param("avatar") String avatar,
			@Param("modifiedUser") String modifiedUser,
			@Param("modifiedTime") Date modifiedTime)  -->
	<update id="updateAvatar">
		update 
			t_user
		set 
			avatar=#{avatar},
			modified_user=#{modifiedUser}, 
			modified_time=#{modifiedTime} 
		where 
			uid=#{uid}
	</update>
	
	
	<!-- 更新用户信息 -->
	<!-- Integer updateInfo(User user); -->
	<update id="updateInfo">
		update 
			t_user
		set 
			phone=#{phone},
			email=#{email},
			gender=#{gender},
			modified_user=#{modifiedUser}, 
			modified_time=#{modifiedTime} 
		where 
			uid=#{uid}
	</update>
	
	
	
	
	<!-- 根据用户名查询用户 -->
	<!-- User findByUsername(String username) -->
	<select id="findByUsername" 
		resultMap="UserEntityMap">
		SELECT 
			uid, username,
			password, avatar,
			salt, is_delete
		FROM 
			t_user 
		WHERE 
			username=#{username}
	</select>
	
	
	<!-- 根据uid查用户信息 -->
	<!-- User findByUid(Integer uid) -->
	<select id="findByUid" 
		resultMap="UserEntityMap">
		select 
			username, password, salt,
			is_delete, phone,
			email, gender
		from 
			t_user 
		where 
			uid=#{uid};
	</select>

</mapper>






